#!/bin/bash
# Script to automatically connect to persistent screen session with proper Unicode
# Auto-generated by Ansible - Debian Stack Deployment

SESSION_NAME="KS"
SCREEN_LOG_DIR="$HOME/.screen-logs"

# Ensure screen logs directory exists
mkdir -p "$SCREEN_LOG_DIR"

# Function to check if screen is installed
check_screen() {
    if ! command -v screen >/dev/null 2>&1; then
        echo "Error: screen is not installed. Please install it with: sudo apt install screen"
        return 1
    fi
}

# Function to set up screen configuration if it doesn't exist
setup_screen_config() {
    local screenrc="$HOME/.screenrc"
    if [ ! -f "$screenrc" ]; then
        cat > "$screenrc" << 'EOF'
# Screen configuration for persistent sessions
startup_message off
defscrollback 10000
hardstatus on
hardstatus alwayslastline
hardstatus string "%{.bW}%-w%{.rW}%n %t%{-}%+w %=%{..G} %H %{..Y} %m/%d %C%a "
termcapinfo xterm* ti@:te@
termcapinfo xterm 'hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007'
defutf8 on
defflow off
vbell off
autodetach on
EOF
        echo "Created screen configuration at $screenrc"
    fi
}

# Main function
main() {
    # Check if screen is available
    if ! check_screen; then
        echo "Falling back to regular shell..."
        return 1
    fi

    # Set up screen configuration
    setup_screen_config

    # Set proper locale for Unicode support
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8

    # Create or reattach to screen session
    if screen -list 2>/dev/null | grep -q "\.$SESSION_NAME[[:space:]]"; then
        echo "ðŸ”„ Reattaching to existing session '$SESSION_NAME'..."
        # Detach any other attached sessions first, then reattach
        screen -d "$SESSION_NAME" 2>/dev/null || true
        screen -r "$SESSION_NAME"
    else
        echo "ðŸ†• Creating new persistent session '$SESSION_NAME'..."
        screen -S "$SESSION_NAME"
    fi
}

# Run main function
main "$@"