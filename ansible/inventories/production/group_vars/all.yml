---
# Global variables for all hosts in production environment

# System configuration
target_user: "{{ target_vm_user | default('developer') }}"
target_user_home: "/home/{{ target_user }}"
debian_version: bookworm

# === Deployment Paths (Configurable) ===
# Remote directory where all deployment artifacts are stored (hidden by default)
# Override with custom_deployment_dir variable if needed
deployment_base_dir: "{{ custom_deployment_dir | default('/home/' + target_user + '/.claude-code-vm') }}"
scripts_dir: "{{ deployment_base_dir }}/scripts"
config_dir: "{{ deployment_base_dir }}/config"
logs_dir: "{{ deployment_base_dir }}/logs"
temp_dir: "{{ deployment_base_dir }}/tmp"
tools_dir: "{{ deployment_base_dir }}/tools"

# === Screen Session Configuration ===
screen_session_name: "{{ custom_session_name | default('DEV') }}"
screen_logs_dir: "{{ logs_dir }}/screen"

# Docker configuration
# docker_users automatically includes target_user
install_docker: false  # Set to true for full deployment
docker_install_compose: true
docker_compose_version: "latest"

# Node.js configuration
nodejs_version: "22"  # LTS version
nodejs_install_method: "nodesource"  # or "nvm"
nodejs_npm_global_packages:
  - "@anthropic-ai/claude-code"

# Package repositories
nodejs_repository: "https://deb.nodesource.com/node_{{ nodejs_version }}.x"
docker_repository: "https://download.docker.com/linux/debian"

# Git configuration
install_git_credential_manager: true
install_git_credential_oauth: false
generate_ssh_keys: true
git_user_name: ""  # Will be read from .env file or configure manually
git_user_email: ""  # Will be read from .env file or configure manually

# Personal Access Token configuration
use_env_file: true
env_file_required: false  # Set to true to require .env file
configure_pats: true
configure_git_signing: false
enable_ssh_url_conversion: false

# Kubernetes tools configuration
install_kubectl: false  # Set to true for full deployment
install_kind: false     # Set to true for full deployment
install_kompose: false  # Set to true for full deployment
install_bash_completion: true  # Generally useful, keep enabled
kubernetes_version: "v1.33"
kind_version: "v0.29.0"
kompose_version: "v1.36.0"

# Service management
services_to_enable:
  - docker
  - containerd

# Security settings
disable_ipv6: false
update_cache: true
upgrade_packages: true

# === Default Configuration Files ===
# Override these with custom_env_file and custom_mcp_servers_file variables
default_env_file: "{{ ansible_env.HOME }}/.config/claude-code-mcps/.env"
default_mcp_servers_file: "{{ ansible_env.HOME }}/.config/claude-code-mcps/mcp-servers.json"

# === Configurable Timeouts (all in seconds) ===
# Package manager wait settings
package_manager_max_wait_seconds: 60  # Max wait for package locks to clear
package_manager_check_interval: 2     # Interval between lock checks

# Git operations timeouts
git_credential_timeout: 30             # Git credential setup timeout  
git_clone_timeout: 120                 # Git clone operations timeout

# Kubernetes deployment timeouts  
k3s_install_timeout: 300               # k3s installation timeout
k3s_service_start_timeout: 60          # k3s service startup timeout
nginx_ingress_ready_timeout: 180       # NGINX ingress controller ready timeout
kubectl_wait_timeout: 120              # Default kubectl wait timeout

# Container and service timeouts
docker_service_timeout: 60             # Docker service start/restart timeout
npm_install_timeout: 180               # npm package installation timeout

# Network operation timeouts
download_timeout: 120                  # Binary/file download timeout
health_check_timeout: 30               # Service health check timeout

# === Performance Optimization Flags ===
# Enable parallel execution where possible
enable_parallel_execution: true
# Skip non-essential validations in fast mode
fast_deployment_mode: false
# Cache downloaded binaries for future deployments
cache_downloads: true