---
# Minimal deployment playbook for low disk space environments
# Installs Docker, Node.js, and Claude Code with minimal dependencies

- name: Minimal Deploy Development Stack to Debian VM
  hosts: debian_servers
  become: true
  gather_facts: true
  serial: 1

  vars:
    deployment_timestamp: "{{ ansible_date_time.iso8601 }}"

  pre_tasks:
    - name: Display deployment information
      debug:
        msg:
          - "=== Minimal Ansible Deployment Started ==="
          - "Target Host: {{ inventory_hostname }} ({{ ansible_host }})"
          - "Operating System: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Deployment Time: {{ deployment_timestamp }}"
          - "Target User: {{ target_user }}"
      tags: always

    - name: Clean apt cache and check disk space
      shell: |
        apt clean
        df -h / | tail -1
      register: disk_status
      tags: always

    - name: Display disk space
      debug:
        msg: "Disk space: {{ disk_status.stdout }}"
      tags: always

    - name: Update apt cache (minimal)
      apt:
        update_cache: true
        cache_valid_time: 0
      retries: 2
      tags: always

  tasks:
    - name: Install minimal essential packages
      apt:
        name:
          - curl
          - wget
          - gnupg
          - ca-certificates
        state: present
        update_cache: false
      tags:
        - minimal
        - packages

    - name: Get target user home directory
      getent:
        database: passwd
        key: "{{ target_user }}"
      register: user_info

    - name: Create npm global directory
      file:
        path: "{{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.npm-global"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'
      tags:
        - npm-prep

    # Docker Installation (minimal)
    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      tags: docker

    - name: Download Docker GPG key
      get_url:
        url: "https://download.docker.com/linux/debian/gpg"
        dest: "/etc/apt/keyrings/docker.asc"
        mode: '0644'
      tags: docker

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        filename: docker
        state: present
        update_cache: false
      tags: docker

    - name: Update apt cache for Docker
      apt:
        update_cache: true
        cache_valid_time: 0
      tags: docker

    - name: Install Docker CE (minimal)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: false
      tags: docker

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: true
      tags: docker

    - name: Add user to docker group
      user:
        name: "{{ target_user }}"
        groups: docker
        append: true
      tags: docker

    # Node.js Installation
    - name: Add NodeSource GPG key
      get_url:
        url: "https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key"
        dest: "/etc/apt/keyrings/nodesource.gpg"
        mode: '0644'
      tags: nodejs

    - name: Add NodeSource repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_22.x {{ ansible_distribution_release }} main"
        filename: nodesource
        state: present
        update_cache: false
      tags: nodejs

    - name: Update apt cache for Node.js
      apt:
        update_cache: true
        cache_valid_time: 0
      tags: nodejs

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: false
      tags: nodejs

    - name: Configure npm prefix for user
      shell: npm config set prefix '{{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.npm-global'
      become_user: "{{ target_user }}"
      tags: nodejs

    - name: Add npm global bin to PATH
      lineinfile:
        path: "{{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.bashrc"
        line: 'export PATH={{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.npm-global/bin:$PATH'
        create: true
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
      tags: nodejs

    # Claude Code Installation
    - name: Install Claude Code
      npm:
        name: "@anthropic-ai/claude-code"
        global: true
        executable: "{{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.npm-global/bin/npm"
      become_user: "{{ target_user }}"
      environment:
        PATH: "{{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.npm-global/bin:{{ ansible_env.PATH }}"
      tags: claude-code

  post_tasks:
    - name: Verify installations
      block:
        - name: Check Docker version
          command: docker --version
          register: docker_version

        - name: Check Node.js version
          command: node --version
          register: node_version

        - name: Check Claude Code version
          shell: "source {{ user_info.ansible_facts.getent_passwd[target_user][4] }}/.bashrc && claude --version"
          become_user: "{{ target_user }}"
          register: claude_version
          args:
            executable: /bin/bash

        - name: Display final status
          debug:
            msg:
              - "=== Installation Complete ==="
              - "Docker: {{ docker_version.stdout }}"
              - "Node.js: {{ node_version.stdout }}"
              - "Claude Code: {{ claude_version.stdout }}"
              - ""
              - "Next steps:"
              - "1. Log out and back in for Docker group access"
              - "2. Run 'source ~/.bashrc' to update PATH"
              - "3. Run 'claude' to authenticate with Anthropic"

    - name: Clean up
      shell: apt clean && apt autoremove -y
      tags: cleanup