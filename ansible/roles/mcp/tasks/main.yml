---
# MCP (Model Context Protocol) server configuration tasks

- name: Get target user information
  getent:
    database: passwd
    key: "{{ target_user }}"
  register: mcp_user_info
  tags:
    - mcp
    - prerequisites

- name: Set target user home directory
  set_fact:
    target_user_home: "{{ mcp_user_info.ansible_facts.getent_passwd[target_user][4] }}"
  tags:
    - mcp
    - prerequisites

- name: Load environment variables from .env file
  block:
    - name: Check if .env file exists
      stat:
        path: "{{ env_file_path }}"
      register: env_file_stat
      delegate_to: localhost
      become: false
      run_once: true

    - name: Read .env file
      slurp:
        src: "{{ env_file_path }}"
      register: env_file_content
      delegate_to: localhost
      become: false
      run_once: true
      when: env_file_stat.stat.exists

    - name: Parse environment variables
      set_fact:
        env_vars: "{{ env_vars | default({}) | combine({item.split('=')[0]: item.split('=')[1] | regex_replace('^\"|\"$', '')}) }}"
      loop: "{{ (env_file_content.content | b64decode).split('\n') }}"
      when: 
        - env_file_stat.stat.exists
        - item is match('^[A-Z_]+=.*')
        - not item.startswith('#')
      no_log: true

    - name: Display loaded environment variables (masked)
      debug:
        msg: "Loaded {{ env_vars.keys() | list | length }} environment variables from .env file"
      when: env_file_stat.stat.exists
  when: use_env_file
  tags:
    - mcp
    - env-file

- name: Ensure Ansible is installed for claude-code-mcp-management
  apt:
    name: ansible
    state: present
  become: true
  tags:
    - mcp
    - prerequisites

- name: Configure MCP servers using claude-code-mcp-management
  block:
    - name: Check if Claude Code is installed and accessible
      shell: "bash -c 'source ~/.bashrc && source /etc/profile.d/npm-global.sh && claude --version'"
      become_user: "{{ target_user }}"
      register: claude_check
      changed_when: false

    - name: Check if local claude-code-mcp-management exists in scripts/
      stat:
        path: "{{ playbook_dir }}/../scripts/claude-code-mcp-management"
      register: local_mcp_management
      delegate_to: localhost
      become: false

    - name: Copy local claude-code-mcp-management to target
      copy:
        src: "{{ playbook_dir }}/../scripts/claude-code-mcp-management/"
        dest: "{{ target_user_home }}/claude-code-mcp-management/"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: preserve
      when: local_mcp_management.stat.exists

    - name: Download claude-code-mcp-management repository (fallback)
      block:
        - name: Download repository archive
          get_url:
            url: "https://github.com/ksamaschke/claude-code-mcp-management/archive/refs/heads/main.zip"
            dest: "{{ target_user_home }}/claude-code-mcp-management.zip"
            owner: "{{ target_user }}"
            group: "{{ target_user }}"
            mode: '0644'

        - name: Extract repository
          unarchive:
            src: "{{ target_user_home }}/claude-code-mcp-management.zip"
            dest: "{{ target_user_home }}/"
            owner: "{{ target_user }}"
            group: "{{ target_user }}"
            remote_src: true

        - name: Rename extracted directory
          command: mv "{{ target_user_home }}/claude-code-mcp-management-main" "{{ target_user_home }}/claude-code-mcp-management"
          become_user: "{{ target_user }}"
          args:
            creates: "{{ target_user_home }}/claude-code-mcp-management"
      when: not local_mcp_management.stat.exists

    - name: Check if local mcp-servers.json exists
      stat:
        path: "{{ mcp_servers_file }}"
      register: local_mcp_config_exists
      delegate_to: localhost
      become: false

    - name: Generate default MCP servers configuration if none exists locally
      template:
        src: mcp-servers.json.j2
        dest: "{{ mcp_servers_file }}"
        mode: '0600'
      delegate_to: localhost
      become: false
      when: not local_mcp_config_exists.stat.exists

    - name: Copy local mcp-servers.json to claude-code-mcp-management
      copy:
        src: "{{ mcp_servers_file }}"
        dest: "{{ target_user_home }}/claude-code-mcp-management/mcp-servers.json"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0600'
        remote_src: true

    - name: Copy environment variables to claude-code-mcp-management if available
      copy:
        src: "{{ env_file_path }}"
        dest: "{{ target_user_home }}/claude-code-mcp-management/.env"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0600'
        remote_src: true
      delegate_to: localhost
      become: false
      when: env_vars is defined and env_file_path is defined


    - name: Run claude-code-mcp-management script
      shell: |
        cd {{ target_user_home }}/claude-code-mcp-management
        export PATH="{{ target_user_home }}/.npm-global/bin:$PATH"
        bash ./manage-mcp.sh
      become_user: "{{ target_user }}"
      environment: "{{ env_vars | default({}) }}"
      args:
        executable: /bin/bash

  tags:
    - mcp
    - config

- name: Display MCP setup completion
  debug:
    msg:
      - "=== MCP Server Configuration Complete ==="
      - "Configuration file: {{ mcp_config_file }}"
      - "Installed packages: {{ mcp_packages | length }}"
      - "Docker images: {{ mcp_docker_images | length if pull_docker_images else 0 }}"
      - "Environment variables: {{ env_vars.keys() | list | length if env_vars is defined else 0 }}"
      - ""
      - "Next steps:"
      - "1. Restart Claude Code to load new MCP configuration"
      - "2. Verify MCP servers with '/mcp' command in Claude Code"
      - "3. Test individual MCP tools as needed"
  tags:
    - mcp
    - completion