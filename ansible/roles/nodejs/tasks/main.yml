---
# Node.js role tasks - Install Node.js via NodeSource repository

- name: Install NodeSource GPG key (official method)
  shell: |
    curl -fsSL {{ nodejs_gpg_key_url }} | gpg --dearmor -o {{ nodejs_gpg_key_path }}
    chmod a+r {{ nodejs_gpg_key_path }}
  args:
    creates: "{{ nodejs_gpg_key_path }}"
  register: nodejs_gpg_key
  tags:
    - nodejs
    - repository

- name: Install python3-debian for repository management
  apt:
    name: python3-debian
    state: present
    update_cache: true
  tags:
    - nodejs
    - prerequisites

- name: Add NodeSource repository (modern Debian 12 method)
  ansible.builtin.deb822_repository:
    name: nodesource
    types: [deb]
    uris: ["{{ nodejs_repo_url }}"]
    suites: ["{{ nodejs_repo_codename }}"]
    components: [main]
    signed_by: "{{ nodejs_gpg_key_path }}"
    state: present
  tags:
    - nodejs
    - repository

- name: Install Node.js
  apt:
    name: nodejs
    state: present
    update_cache: true
  register: nodejs_installation
  until: nodejs_installation is succeeded
  retries: 3
  delay: 10
  tags:
    - nodejs
    - packages

- name: Set npm global directory path
  set_fact:
    npm_config_prefix: "{{ target_user_home }}/.npm-global"

- name: Create npm global directory for user
  file:
    path: "{{ npm_config_prefix }}"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'
  when: configure_npm_for_user
  tags:
    - nodejs
    - npm
    - configuration

- name: Configure npm prefix for user
  shell: npm config set prefix '{{ npm_config_prefix }}'
  become_user: "{{ target_user }}"
  when: configure_npm_for_user
  tags:
    - nodejs
    - npm
    - configuration

- name: Add npm global bin to PATH in .bashrc
  lineinfile:
    path: "{{ target_user_home }}/.bashrc"
    line: 'export PATH={{ npm_config_prefix }}/bin:$PATH'
    create: true
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
  when: configure_npm_for_user
  tags:
    - nodejs

- name: Source .bashrc to update PATH immediately for validation
  shell: |
    source {{ target_user_home }}/.bashrc
    echo "PATH updated: $PATH"
  become_user: "{{ target_user }}"
  when: configure_npm_for_user
  register: path_update
  tags:
    - nodejs
    - path

- name: Create environment setup script for immediate use
  copy:
    content: |
      #!/bin/bash
      export PATH={{ npm_config_prefix }}/bin:$PATH
      export NODE_PATH={{ npm_config_prefix }}/lib/node_modules
    dest: /etc/profile.d/npm-global.sh
    mode: '0644'
  become: true
  when: configure_npm_for_user
  tags:
    - nodejs
    - environment
    - npm
    - configuration

- name: Update npm to latest version
  shell: npm install -g npm@latest
  become_user: "{{ target_user }}"
  environment:
    PATH: "{{ npm_config_prefix }}/bin:{{ ansible_env.PATH }}"
  when: update_npm_to_latest and npm_config_prefix is defined
  tags:
    - nodejs
    - npm
    - update

- name: Install global npm packages
  npm:
    name: "{{ item }}"
    global: true
    executable: "{{ npm_config_prefix }}/bin/npm"
  become_user: "{{ target_user }}"
  environment:
    PATH: "{{ npm_config_prefix }}/bin:{{ ansible_env.PATH }}"
  loop: "{{ npm_global_packages }}"
  when: npm_global_packages | length > 0 and npm_config_prefix is defined
  tags:
    - nodejs
    - npm
    - packages

- name: Validate Node.js installation
  block:
    - name: Check Node.js version
      command: node --version
      register: nodejs_version_check
      changed_when: false

    - name: Check npm version
      command: npm --version
      register: npm_version_check
      changed_when: false

    - name: Display Node.js and npm versions
      debug:
        msg: 
          - "Node.js: {{ nodejs_version_check.stdout }}"
          - "npm: {{ npm_version_check.stdout }}"

    - name: Verify npm global configuration
      command: npm config get prefix
      register: npm_prefix_check
      become_user: "{{ target_user }}"
      changed_when: false
      when: configure_npm_for_user

    - name: Display npm prefix configuration
      debug:
        msg: "npm prefix: {{ npm_prefix_check.stdout }}"
      when: configure_npm_for_user and npm_prefix_check is defined

    - name: Test npm package installation (optional)
      npm:
        name: "cowsay"
        global: true
        executable: "{{ npm_config_prefix }}/bin/npm"
      become_user: "{{ target_user }}"
      environment:
        PATH: "{{ npm_config_prefix }}/bin:{{ ansible_env.PATH }}"
      register: npm_test_install
      when: test_npm_install

    - name: Remove test package
      npm:
        name: "cowsay"
        global: true
        state: absent
        executable: "{{ npm_config_prefix }}/bin/npm"
      become_user: "{{ target_user }}"
      environment:
        PATH: "{{ npm_config_prefix }}/bin:{{ ansible_env.PATH }}"
      when: test_npm_install and npm_test_install is succeeded

  when: validate_installation
  tags:
    - nodejs
    - validation