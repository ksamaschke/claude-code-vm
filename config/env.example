# =============================================================================
# Environment Configuration Template
# =============================================================================
# Copy this file to .env in the project root and configure with your credentials
# 
# Usage: cp config/env.example .env
#        Edit .env with your actual credentials
#        make deploy VM_HOST=your.ip TARGET_USER=username
#
# =============================================================================

# =============================================================================
# Git Server Configuration (Required - at least one)
# =============================================================================

# Well-known providers (URL is automatic)
# GitHub.com - always uses https://github.com
GITHUB_USERNAME="yourusername"
GITHUB_PAT="ghp_xxxxxxxxxxxxxxxxxxxx"

# GitLab.com - always uses https://gitlab.com  
# GITLAB_USERNAME="yourusername"
# GITLAB_PAT="glpat-xxxxxxxxxxxxxxxxxxxx"

# Custom/Self-hosted Git servers (URL required)
# Pattern: GIT_{NAME}_{FIELD} where NAME is your choice
# Use this for: self-hosted GitLab, GitHub Enterprise, Azure DevOps, etc.

# Example: Company GitLab
# GIT_COMPANY_URL="https://gitlab.company.com"
# GIT_COMPANY_USERNAME="yourusername"
# GIT_COMPANY_PAT="glpat-xxxxxxxxxxxxxxxxxxxx"

# Example: Azure DevOps
# GIT_AZURE_URL="https://dev.azure.com/yourorganization"
# GIT_AZURE_USERNAME="yourusername"
# GIT_AZURE_PAT="xxxxxxxxxxxxxxxxxxxxxxx"

# Example: GitHub Enterprise
# GIT_ENTERPRISE_URL="https://github.enterprise.com"
# GIT_ENTERPRISE_USERNAME="yourusername"
# GIT_ENTERPRISE_PAT="ghp_xxxxxxxxxxxxxxxxxxxxxxx"

# =============================================================================
# MCP Server API Keys (Optional)
# =============================================================================
# Only configure MCP servers you want to use
# Servers without API keys will be automatically excluded

# Search Providers
BRAVE_API_KEY=""
# TAVILY_API_KEY=""
# KAGI_API_KEY=""
# PERPLEXITY_API_KEY=""
# JINA_API_KEY=""

# Context7 (Upstash Redis)
# UPSTASH_REDIS_REST_URL="https://your-redis-url.upstash.io"
# UPSTASH_REDIS_REST_TOKEN="your_redis_token"

# =============================================================================
# Optional Git Configuration
# =============================================================================
# These will be set globally on the target system

# GIT_USER_NAME="Your Name"
# GIT_USER_EMAIL="your.email@example.com"

# =============================================================================
# Advanced Configuration (Optional)
# =============================================================================
# These settings have sensible defaults

# Screen session name for persistent SSH sessions
# SCREEN_SESSION_NAME="DEV"

# Node.js version
# NODEJS_VERSION="22"

# Docker Compose version
# DOCKER_COMPOSE_VERSION="v2.24.0"

# =============================================================================
# Security Notes
# =============================================================================
# 1. Never commit this file with real credentials
# 2. Use Personal Access Tokens (PATs) instead of passwords
# 3. Set minimal required permissions for PATs
# 4. Rotate PATs regularly
# 5. Consider using a password manager for PAT storage